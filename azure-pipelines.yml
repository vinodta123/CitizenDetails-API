# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Maven@3
  displayName: 'Maven Build'
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean package -Dmaven.test.skip=true'
    publishJUnitResults: false
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

- task: Docker@2
  displayName: 'Docker Image'
  inputs:
    containerRegistry: 'VSDockerHubConnection'
    repository: 'vinodta123 / citizendetailapi'
    command: 'build'
    Dockerfile: '**/Dockerfile'

- task: Docker@2
  displayName: 'DockerHub Login'
  inputs:
    containerRegistry: 'VSDockerHubConnection'
    command: 'login'
- task: Docker@2
  displayName: 'Docker Push DockerHub'
  inputs:
    containerRegistry: 'VSDockerHubConnection'
    repository: 'vinodta123 / citizendetailapi'
    command: 'push'

- task: CopyFiles@2
  displayName: 'Copy Files'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '*.yml'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'